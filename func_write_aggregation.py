# Autogenerated with SMOP version 
# main.py func_indicator_11_FUTURE_SCENARIOS.m
import numpy as np
from netcdf_funcs import *
import time
from func_write import func_write
from func_aggregation import func_aggregation

def func_write_aggregation(aggregation,options_output,geougunit,i_geogunits,geogunit_list,geogunit_idnums,out_list,indicators): 
        var_w=[0,0,0]
        for t in range(0,len(indicators)):
                if (aggregation[0]=='yes'and indicators[t]=='Urban_Damage'): 
                    var_w[t]="Urban_Damage_aggregation"
                    out_list_Damage=np.array(out_list[t]);                 
                    out = func_aggregation(out_list_Damage,geogunit_list,geogunit_idnums);
                    np.savetxt(options_output.replace('.nc','_Urban_Damage_geogunit_'+str(geougunit[i_geogunits])+'.txt'),(out[:]),delimiter=',',fmt='%f')
                if (aggregation[0]=='yes' and indicators[t]=='GDPexp'):
                    var_w[t]="GDPexp_aggregation"
                    out_list_GDP = np.array(out_list[t]);
                    out = func_aggregation(out_list_GDP,geogunit_list,geogunit_idnums);
                    np.savetxt(options_output.replace('.nc','_GDP_Exposed_geogunit_'+str(geougunit[i_geogunits])+'.txt'),(out[:]),delimiter=',',fmt='%f')
                if (aggregation[0]=='yes' and indicators[t]=='POPexp'):
                    var_w[t]="POPexp_aggregation" 
                    out_list_POP = np.array(out_list[t]);
                    out = func_aggregation(out_list_POP,geogunit_list,geogunit_idnums);
                    np.savetxt(options_output.replace('.nc','_POP_Exposed_geogunit_'+str(geougunit[i_geogunits])+'.txt'),(out[:]),delimiter=',',fmt='%f')
                if (aggregation[0]=='yes'and indicators[t]=='Building_Damage'):
                    var_w[t]="Building_Damage_aggregation"
                    out_list_Damage=np.array(out_list[t]);
                    out = func_aggregation(out_list_Damage,geogunit_list,geogunit_idnums);
                    np.savetxt(options_output.replace('.nc','_Building_Damage_geogunit_'+str(geougunit[i_geogunits])+'.txt'),(out[:]),delimiter=',',fmt='%f')
                    print(out)
        return (var_w);
